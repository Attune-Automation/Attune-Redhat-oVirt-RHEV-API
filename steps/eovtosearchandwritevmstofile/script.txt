export PATH=~/ks_ovirt_py_venv/bin:$PATH

python3 <<"EOF"
import logging
import os
import time
import sys

import ovirtsdk4 as sdk
import ovirtsdk4.types as types


logging.basicConfig(stream=sys.stdout, level=logging.INFO)
logger = logging.getLogger("Attune")

# This example will connect to the server, search for a VM by a name pettern and
# write the list to file.

# Create the connection to the server:
connection = sdk.Connection(
    url='https://{ovirtEngineServer.fqn}/ovirt-engine/api',
    username='{ovirtEngineApiUser.user}',
    password='{ovirtEngineApiUser.password}',
    insecure=True,
    debug=True,
    log=logger,
)
logger.info("Connection Successful")

# Find the service that manages VMs:
logger.info("Getting system_service")
system_service = connection.system_service()

logger.info("Getting vms_service")
vms_service = system_service.vms_service()

# Find the VM:
logger.info("Searching for VM 'name={ovirtVmSearchString}'")

os.chdir("tmp")
cwd = os.getcwd()
print("cwd = %s" % cwd)

vm_names_file_name = "{ovirtUniqueFileName}"
vm_names_file = open(vm_names_file_name, "w")

try:
    # Find the VMs:
    vm_list = vms_service.list(search='name={ovirtVmSearchString}')
    
    number_vms = len(vm_list)
    logger.info("number_vms = " + str(number_vms))
    
    i = 0
    for vm in vm_list:
        name = vm.name
        

        print("%s. %s, id=%s" % (i, name, vm.id))
        vm_names_file.write("%s,%s\n" % (name, vm.id))
            
        i += 1
        
    logger.info("Written to %s/%s." % (cwd, vm_names_file_name))
        
    vm_names_file.close()

except IndexError:
    logger.info("No VMs found")
    exit(1)

# Close the connection to the server:
connection.close()

EOF