export PATH=~/ks_ovirt_py_venv/bin:$PATH

python3 <<"EOF"
import logging
import os
import time
import sys

import ovirtsdk4 as sdk
import ovirtsdk4.types as types


logging.basicConfig(stream=sys.stdout, level=logging.INFO)
logger = logging.getLogger("Attune")

# This example will connect to the server, search for a VM by a name pettern and
# write the list to file.

# Create the connection to the server:
connection = sdk.Connection(
    url='https://{ovirtEngineServer.fqn}/ovirt-engine/api',
    username='{ovirtEngineApiUser.user}',
    password='{ovirtEngineApiUser.password}',
    insecure=True,
    debug=True,
    log=logger,
)
logger.info("Connection Successful")

# Find the service that manages VMs:
logger.info("Getting system_service")
system_service = connection.system_service()

logger.info("Getting vms_service")
vms_service = system_service.vms_service()

# Find the VM:
logger.info("Searching for VM 'name={ovirtVmSearchString} and cluster={ovirtClusterName}'")

vm_names_file_name = "{ovirtHostServer.hostname}_{ovirtVmSearchString}_vm_list.txt"
vm_names_file_name = vm_names_file_name.replace('*', 'X').replace(',', '_').replace(' ', '')
vm_names_file = open(vm_names_file_name, "w")

try:
    for searchString in "{ovirtVmSearchString}".split(','):
        searchString = searchString.strip()
        if not searchString:
            continue
            
        logger.info("Searching for %s", searchString)
            
        # Find the VMs:
        vm_list = vms_service.list(
            search='name=%s and cluster={ovirtClusterName}'
                % searchString,
            case_sensitive=False
        )
        
        number_vms = len(vm_list)
        logger.info("number_vms = " + str(number_vms))
        
        for vm in vm_list:
            name = vm.name
            
            print("%s, id=%s" % (name, vm.id))
            vm_names_file.write("%s,%s\n" % (name, vm.id))

    logger.info("Written to %s", vm_names_file_name)
        
    vm_names_file.close()

except IndexError:
    logger.info("No VMs found")
    exit(1)

# Close the connection to the server:
connection.close()

EOF


FILE="{ovirtHostServer.hostname}_{ovirtVmSearchString}_vm_list.txt"
FILE="$(echo "$FILE" | sed 's/[*]/X/g;s/,/_/g;s/ //g;')"

echo "Found $(wc -l < ${FILE}) VMs"

echo "We've found the fillowing VMs:"
cat ${FILE}



